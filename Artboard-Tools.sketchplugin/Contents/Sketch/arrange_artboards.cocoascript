var arrange_artboards = function (context) {
  // User-adjustable:

  var group_related = true;
  var zoom_to_fit = true;

  var start_x = 20;
  var start_y = 20;

  var spacing_x = 200;
  var spacing_y = 400;
  var spacing_group = Math.round(spacing_x / 2);

  var max_cols = 10;


  // Main junk, don't tread on me

  var doc = context.document;
  var selection = context.selection;
  var page = [doc currentPage];
  var view = [doc currentView];

  var curr_x = start_x;
  var curr_y = start_y;
  var curr_cols = 0;

  var max_right = 0;
  var max_bottom = 0;

  var prev_group_item = null;
  var curr_row_height = 0;

  [[doc currentPage] deselectAllLayers];
  var all_artboards = [[doc currentPage] artboards];

  for (var i = 0; i < [all_artboards count]; i++) {
    var new_x, new_y;
    var up_counts = true;

    var ab = [all_artboards objectAtIndex:i];
    var artboard_name = [ab name];

    var m = artboard_name.match(/^(.+)--([0-9]+)$/i);

    if ((m != null) && (group_related == true)) {
      var this_group = m[1];

      if (prev_group_item == null) {
        new_x = curr_x;
        new_y = curr_y;
      } else {
        new_x = [[prev_group_item absoluteRect] x];
        new_y = [[prev_group_item absoluteRect] y] + [[prev_group_item absoluteRect] height] + spacing_group;
      }

      prev_group_item = ab;

      if ((i + 1) < [all_artboards count]) {
        artboard_next_name = [[all_artboards objectAtIndex:i+1] name];
        var m_next = artboard_next_name.match(/^(.+)--([0-9]+)$/i);
        if (m_next != null) {
          if (m_next[1] == this_group) {
            up_counts = false;
          } else {
            prev_group_item = null;
          }
        } else {
          prev_group_item = null;
        }
      }
    } else {
      prev_group_item = null;
      new_x = curr_x;
      new_y = curr_y;
    }

    [[ab frame] setX:new_x];
    [[ab frame] setY:new_y];

    var artboard_right = [[ab absoluteRect] x] + [[ab absoluteRect] width];
    var artboard_bottom = [[ab absoluteRect] y] + [[ab absoluteRect] height];

    max_right = (artboard_right > max_right) ? artboard_right : max_right;
    max_bottom = (artboard_bottom > max_bottom) ? artboard_bottom : max_bottom;
    curr_row_height = (artboard_bottom > curr_row_height) ? artboard_bottom : curr_row_height;

    if (up_counts == true) {
      curr_x += [[ab absoluteRect] width] + spacing_x;
      curr_cols++;

      if (curr_cols >= max_cols) {
        curr_x = start_x;
        curr_y = curr_row_height + spacing_y;
        curr_cols = 0;
        curr_row_height = 0;
      }
    }
  }

  if (zoom_to_fit == true) {
    [view centerLayersInCanvas];
  }

  [doc showMessage:"Artboards arranged."];
};